{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "tt.app.ShiftService : microservice for layout.",
        "title": "ShiftService API",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/api-shifts",
    "paths": {
        "/shifts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get shifts by dto",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "get shifts by dto",
                "parameters": [
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get shifts by success",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "400": {
                        "description": "invalid pagination query",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "422": {
                        "description": "shifts not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get todos by pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "summary": "get todos by pagination",
                "parameters": [
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get todos by pagination success",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "400": {
                        "description": "invalid pagination query: page,limit",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "404": {
                        "description": "todos not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "upload file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "uploaded file name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    }
                }
            }
        },
        "/uploads/{filename}": {
            "get": {
                "description": "retrieve uploaded file by filename",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "retrieve uploaded file by filename",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get users by dto",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users by dto",
                "parameters": [
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get shifts by success",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "400": {
                        "description": "invalid pagination query",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "422": {
                        "description": "shifts not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.RespondJson"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.RespondJson": {
            "type": "object",
            "properties": {
                "intent": {
                    "type": "string",
                    "example": "bbrn:::SERVICE_NAME:::/upload"
                },
                "message": {},
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}